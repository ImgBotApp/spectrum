@using System.Web.Mvc.Html
@using Spectrum.Content.Payments.Controllers
@using Umbraco.Web
@model Spectrum.Content.Payments.ViewModels.PaymentViewModel

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@using (Html.BeginUmbracoForm<PaymentController>("HandlePayment"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

    <div>
        
        <div class="panel panel-default bootstrap-basic">
        <div class="panel-heading">
            <h3 class="panel-title">Enter Card Details</h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="form-group col-xs-8">
                    <label class="control-label">Card Number</label>
                    <div class="form-control" id="card-number"></div>
                    <span class="helper-text"></span>
                </div>
                <div class="form-group col-xs-4">
                    <div class="row">
                        <label class="control-label col-xs-12">Expiration Date</label>
                        <div class="col-xs-6">
                            <div class="form-control" id="expiration-month"></div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-control" id="expiration-year"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-xs-6">
                    <label class="control-label">Security Code</label>
                    <div class="form-control" id="cvv"></div>
                </div>
                <div class="form-group col-xs-6">
                    <label class="control-label">Amount</label>
                    <div class="form-control" id="amount"></div>
                </div>
            </div>

            <button value="submit" id="submit" class="btn btn-success btn-lg">Pay with <span id="card-type">Card</span></button>
        
        </div>

        <script src="https://js.braintreegateway.com/web/3.17.0/js/client.min.js"></script>
        <script src="https://js.braintreegateway.com/web/3.17.0/js/hosted-fields.min.js"></script>
            
            <script>

                var xxxx   = '@Html.Action("GetAuthToken", "Payment")';
                var nodeId = '@Html.Action("GetNodeId", "Payment")';
                var url    = '@Url.Action("HandlePayment", "Payment")';

                braintree.client.create({
                    authorization: xxxx

                }, function (err, clientInstance) {
                    if (err) {
                        console.error(err);
                        return;
                    }

                    braintree.hostedFields.create({
                        client: clientInstance,
                        styles: {
                            'input': {
                                'font-size': '14px',
                                'font-family': 'helvetica, tahoma, calibri, sans-serif',
                                'color': '#3a3a3a'
                            },
                            ':focus': {
                                'color': 'black'
                            }
                        },
                        fields: {
                            number: {
                                selector: '#card-number',
                                placeholder: '4111 1111 1111 1111'
                            },
                            cvv: {
                                selector: '#cvv',
                                placeholder: '123'
                            },
                            expirationMonth: {
                                selector: '#expiration-month',
                                placeholder: 'MM'
                            },
                            expirationYear: {
                                selector: '#expiration-year',
                                placeholder: 'YY'
                            }
                        }
                    }, function (err, hostedFieldsInstance) {
                        if (err) {
                            console.error(err);
                            return;
                        }

                        hostedFieldsInstance.on('validityChange', function (event) {
                            var field = event.fields[event.emittedBy];

                            if (field.isValid) {
                                if (event.emittedBy === 'expirationMonth' || event.emittedBy === 'expirationYear') {
                                    if (!event.fields.expirationMonth.isValid || !event.fields.expirationYear.isValid) {
                                        return;
                                    }
                                } else if (event.emittedBy === 'number') {
                                    $('#card-number').next('span').text('');
                                }

                                 $(field.container).parents('.form-group').addClass('has-success');
                            } else if (field.isPotentiallyValid) {
                                 $(field.container).parents('.form-group').removeClass('has-warning');
                                 $(field.container).parents('.form-group').removeClass('has-success');

                                 if (event.emittedBy === 'number') {
                                    $('#card-number').next('span').text('');
                                }
                            } else {
                                $(field.container).parents('.form-group').addClass('has-warning');

                                if (event.emittedBy === 'number') {
                                    $('#card-number').next('span').text('Looks like this card number has an error.');
                                }
                            }
                        });

                        hostedFieldsInstance.on('cardTypeChange', function (event) {

                            if (event.cards.length === 1) {
                                $('#card-type').text(event.cards[0].niceType);
                            } else {
                                $('#card-type').text('Card');
                            }
                        });

                        $('form').submit(function (event) {
                            event.preventDefault();
                            hostedFieldsInstance.tokenize(function (err, payload) {
                                if (err) {
                                    alert(err);
                                    console.error(err);
                                    return;
                                }

                                var nodeIdString = '"' + nodeId + '"';
                                var nonceString = '"' + payload.nonce + '"';

                                $.ajax({
                                    url: url,
                                    type: 'POST',
                                    dataType: 'json',
                                    data: '{ "currentPageNodeId": ' + nodeIdString + ', "emailAddress":"a@a.com", "nonce": ' + nonceString + ', "amount": "10"}',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                        window.location.href = data;
                                    },
                                    error: function (request, status, errorThrown) {
                                        window.location.href = "/error";
                                    }
                                });
                            });
                        });
                    });
                });

            </script>

    </div>
</div>
}
