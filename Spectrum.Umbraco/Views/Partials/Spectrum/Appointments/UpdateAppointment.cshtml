@using Spectrum.Content.Appointments.Controllers
@model Spectrum.Content.Appointments.ViewModels.AppointmentViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@using (Html.BeginUmbracoForm<AppointmentsController>("UpdateAppointment"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="center-content">
        <div class="row">
            <div class="col-sm-6 col-md-4 col-md-offset-4">
                <div class="account-wall">

                    <h2 class="partial-title">Update Appointment</h2>

                    @Html.HiddenFor(model => model.Id)

                    <div class="calendar-position form-group">
                        @Html.TextBoxFor(model => model.StartTime, "{0:dd-MMM-yyyy HH:mm}", new { @class = "date form-control" })
                        <span class="btn" style="cursor: pointer;">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.StartTime)

                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "Duration (In minutes)" } })
                    @Html.ValidationMessageFor(model => model.Duration)

                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", placeholder = "Location" } })
                    @Html.ValidationMessageFor(model => model.Location)

                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Description", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.Description)

                    <div>
                        <label class="control-label">Add Attendees</label>
                    </div>
                    <div class="form-group">
                        <input class="form-control" id="attendeeInput" placeholder="Enter email address" data-val="true" data-val-required="Please enter a valid Email Address">
                        <div>
                            <span class="field-validation-valid" data-valmsg-for="attendeeInput" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <ul id="attendeeList" class="list-group" style="list-style-type: none;">
                    </ul>

                    <script src="../../../../scripts/spectrum/appointment.js"></script>

                    <button value="submit" id="submit" onclick="checkAttendees();" class="btn btn-lg btn-primary btn-block">Update Appointment</button>

                </div>
            </div>
        </div>
    </div>


    <script>

        $(document).ready(function () {

            $('.input-validation-error').parents('.form-group').addClass('has-error');
            $('.field-validation-error').addClass('text-danger');

            var myArray = [];

            @foreach (var d in Model.Attendees)
            {
                @:myArray.push("@d");
            }
            for (var i=0; i<myArray.length; i++) {
                $('#attendeeList').prepend(prependAttendee(i+1, myArray[i]));
            }
        
            initialiseDatePicker();

            $('.btn').click(function () {
                $(".date", $(this).closest(".form-group")).focus();
            });

            $('#attendeeInput').blur(function () {
                if ($('#attendeeInput').val() !== '') {
                    addAttendee();
                    $(this).focus();
                }
            });

            $('form').submit(function (event) {

                $('#submit').prop('disabled', true);
                event.preventDefault();

                var url = "/umbraco/Surface/Appointments/UpdateAppointment";
                var id = $('#Id').val();
                var startTime = $('#StartTime').val();
                var duration = $('#Duration').val();
                var location = $('#Location').val();
                var description = $('#Description').val();
               
                var items = document.getElementById("attendeeList").getElementsByTagName("li");

                var attendees = [].map.call(items,
                    function(node) {
                        return node.children[0].value;
                    });

                var postData = {
                    id : id,
                    startTime: startTime,
                    duration: duration,
                    location: location,
                    description : description,
                    attendees: attendees
                };

                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify(postData),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        window.location.href = data;
                    },
                    error: function (request, status, errorThrown) {
                        console.log('Server error ' + errorThrown);
                        window.location.href = "/error";
                    }
                });
            });
        });

    </script>
}