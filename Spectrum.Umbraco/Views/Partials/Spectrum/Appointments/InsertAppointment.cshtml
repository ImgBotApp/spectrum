@using Spectrum.Content.Appointments
@using Spectrum.Content.Appointments.Controllers
@model Spectrum.Content.Appointments.ViewModels.InsertAppointmentViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);

    if (Model.Duration == 0)
    {
        int duration = 60;

        if (Request.Cookies[AppointmentConstants.LastAppointmentDuration] != null)
        {
            duration = Convert.ToInt32(Request.Cookies[AppointmentConstants.LastAppointmentDuration].Value);
        }

        Model.Duration = duration;
    }
}

@using (Html.BeginUmbracoForm<AppointmentsController>("InsertAppointment"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="center-content">
        <div class="row">
            <div class="col-sm-6 col-md-4 col-md-offset-4">
                <div class="account-wall">

                    <h2 class="partial-title">Make an Appointment</h2>

                    <div class="calendar-position form-group">
                        <input type="text" class="form-control date" id="StartTime" name="StartTime" placeholder="Start Time" required>
                        <span class="btn" style="cursor: pointer;">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                    @Html.ValidationMessageFor(model => model.StartTime)

                    <input type="text" class="form-control" id="Duration" name="Duration" placeholder="Duration (In minutes)" required>
                    @Html.ValidationMessageFor(model => model.Duration)

                    <input type="text" class="form-control" id="Location" name="Location" placeholder="Location" required>
                    @Html.ValidationMessageFor(model => model.Location)

                    <textarea rows="5" class="form-control" id="Description" name="Description" placeholder="Description"></textarea>
                    @Html.ValidationMessageFor(model => model.Description)

                    <div>
                        <label class="control-label">Attendees</label>
                    </div>
                    <input class="text-box single-line" id="attendeeInput" placeholder="Enter email address" data-val="true" data-val-required="Please enter a valid Email Address">
                    <span class="btn" style="cursor: pointer;">
                        <span class="glyphicon glyphicon-plus" id="addAttendee"></span>
                    </span>
                    <div>
                        <span class="field-validation-valid" data-valmsg-for="attendeeInput" data-valmsg-replace="true"></span>
                    </div>

                    <ul id="attendeeList" class="list-group" style="list-style-type: none;">
                        @Html.DisplayFor(model => model.Attendees)

                        @if (Model.Attendees != null)
                        {
                            foreach (string attendee in Model.Attendees)
                            {
                                <li style="padding-top:10px">
                                    <input id="Attendees_' + index + '" name="Attendees[' + index + ']" value='" + attendee "' />
                                    &nbsp;&nbsp;&nbsp;
                                    <a href="#" onclick="$(this).parent().remove();updateAttendees();"><span class="glyphicon glyphicon-remove"></span></a>' +
                                </li>
                            }
                        }

                    </ul>

                    <button value="submit" id="submit" class="btn btn-lg btn-primary btn-block">Save Appointment</button>

                </div>
            </div>
        </div>
    </div>


    <script>

        function updateAttendees() {

            var items = document.getElementById("attendeeList").getElementsByTagName("li");

            for (var i = 0; i < items.length; i++) {
                var input = items[i].getElementsByTagName("input")[0];

                input.id = "Attendees_" + i;
                input.name = "Attendees[" + i + "]";
            }
        }

        function convert_date () {
          now = new Date();
          year = "" + now.getFullYear();
          month = "" + monthNames[now.getMonth()]
          day = "" + now.getDate(); if (day.length == 1) { day = "0" + day; }
          hour = "" + now.getHours(); if (hour.length == 1) { hour = "0" + hour; }
          minute = "" + now.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
          second = "" + now.getSeconds(); if (second.length == 1) { second = "0" + second; }
          return day + "-" + month + "-" + year + " " + hour + ":" + minute ;
        }

        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];

        $(document).ready(function () {

            $('.input-validation-error').parents('.form-group').addClass('has-error');
            $('.field-validation-error').addClass('text-danger');

            $('.date').datetimepicker(
                {
                    dateFormat: 'dd-M-yy',
                    controlType: 'select',
                    hourMin: 8,
                    hourMax: 20,
                    stepMinute: 5,
                    oneLine: true
                });


            $("#StartTime").val(convert_date());

            $('.btn').click(function() {
                $(".date", $(this).closest(".form-group")).focus();
            });

            $('#addAttendee').click(function () {

                event.preventDefault();
                var inputValue = $('#attendeeInput').val();
                var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

                if (!filter.test(inputValue)) {
                    $('#attendeeInput').parents(".form-group").addClass('has-error');
                    $('#attendeeInput').addClass('text-danger');
                    $('span[data-valmsg-for="attendeeInput"]').text('Please enter a valid Email Address');
                    $('span[data-valmsg-for="attendeeInput"]').addClass('text-danger');
                } else {

                    var items = document.getElementById("attendeeList").getElementsByTagName("li");
                    var index = items.length;

                    $('#attendeeList').prepend('<li style="padding-top:10px">' +
                        '<input id="Attendees_' + index + '" name="Attendees[' + index + ']" value=' + inputValue + '>' +
                        '</input>&nbsp;&nbsp;&nbsp;' +
                        '<a href="#" onclick="$(this).parent().remove();updateAttendees();"><span class="glyphicon glyphicon-remove"></span></a>' +
                        '</li>');

                    $('#attendeeInput').val('');
                    $('span[data-valmsg-for="attendeeInput"]').text('');
                }
            });

            $('form').submit(function(event) {
                $('#submit').prop('disabled', true);
            });
        });

    </script>
}