@using Spectrum.Content.Appointments
@using Spectrum.Content.Appointments.Controllers
@model Spectrum.Content.Appointments.ViewModels.InsertAppointmentViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);

    if (Model.Duration == 0)
    {
        int duration = 60;

        if (Request.Cookies[AppointmentConstants.LastAppointmentDuration] != null)
        {
            duration = Convert.ToInt32(Request.Cookies[AppointmentConstants.LastAppointmentDuration].Value);
        }

        Model.Duration = duration;
    }
}

@using (Html.BeginUmbracoForm<AppointmentsController>("InsertAppointment"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="center-content">
        <div class="row">
            <div class="col-sm-6 col-md-4 col-md-offset-4">
                <div class="account-wall">

                    <h2 class="partial-title">Create an Appointment</h2>

                    <div class="calendar-position form-group">
                        @Html.TextBoxFor(model => model.StartTime, "{0:dd-MMM-yyyy HH:mm}", new { @class = "date form-control" })
                        <span class="btn" style="cursor: pointer;">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.StartTime)

                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @placeholder = "Duration (In minutes)" } })
                    @Html.ValidationMessageFor(model => model.Duration)

                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Location" } })
                    @Html.ValidationMessageFor(model => model.Location)

                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Description", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.Description)

                    <div>
                        <label class="control-label">Add Attendees</label>
                    </div>
                    <div class="form-group">
                        <input class="form-control" id="attendeeInput" placeholder="Enter email address" data-val="true" data-val-required="Please enter a valid Email Address">
                        @*<span class="btn" style="cursor: pointer;">
                                <span class="glyphicon glyphicon-plus" id="addAttendee"></span>
                            </span>*@
                        <div>
                            <span class="field-validation-valid" data-valmsg-for="attendeeInput" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <ul id="attendeeList" class="list-group" style="list-style-type: none;">
                        @Html.DisplayFor(model => model.Attendees)

                        @if (Model.Attendees != null)
                        {
                            foreach (string attendee in Model.Attendees)
                            {
                                <li style="padding-top:10px">
                                    <input class="form-control" id="Attendees_' + index + '" name="Attendees[' + index + ']" value='" + attendee "'>
                                    &nbsp;&nbsp;&nbsp;
                                    <a href="#" onclick="$(this).parent().remove();updateAttendees();"><span class="glyphicon glyphicon-remove"></span></a>' +
                                </li>
                            }
                        }

                    </ul>

                    @Html.EditorFor(model => model.ServiceProviderId)

                    <script src="../../../../scripts/spectrum/appointment.js"></script>

                    <button value="submit" id="submit" onclick="checkAttendees();" class="btn btn-lg btn-primary btn-block">Save Appointment</button>

                </div>
            </div>
        </div>
    </div>


    <script>

        $(document).ready(function () {

            $('.input-validation-error').parents('.form-group').addClass('has-error');
            $('.field-validation-error').addClass('text-danger');

            initialiseDatePicker();

            $('.btn').click(function () {
                $(".date", $(this).closest(".form-group")).focus();
            });

            $('#attendeeInput').blur(function () {
                if ($('#attendeeInput').val() !== '') {
                    addAttendee();
                    $(this).focus();
                }
            });

            $('form').submit(function (event) {
                $('#submit').prop('disabled', true);
            });
        });

    </script>
}